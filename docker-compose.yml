services:
  eureka-app:
    build:
      context: ./eureka-app
      dockerfile: Dockerfile
    image: eureka-app:latest
    container_name: eureka-app
    ports:
      - "8761:8761"
    networks:
      - backend
#    healthcheck:
#      test: ["CMD", "curl", "--fail", "http://localhost:8761/eureka/apps/"]
#      interval: 30s
#      timeout: 10s
#      retries: 5

  statistics-service:
    build:
      context: ./statistics-service
      dockerfile: Dockerfile
    image: statistics-service:latest
    depends_on:
      - eureka-app
      - broker
#    depends_on:
#      eureka-app:
#        condition: service_healthy
#      broker:
#        condition: service_healthy
    container_name: statistics-service
    ports:
      - '8088:8088'
      - '5006:5006'
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-app:8761/eureka/
    networks:
      - backend

  match-service:
    build:
      context: ./match-service
      dockerfile: Dockerfile
    image: match-service:latest
    depends_on:
      - eureka-app
#    depends_on:
#      eureka-app:
#        condition: service_healthy
    container_name: match-service
    ports:
      - '8089:8089'
      - '5005:5005'
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-app:8761/eureka/
    networks:
      - backend
#    environment:
    #      - EUREKA_SERVER_ADDRESS=http://serviceregistry:8761/eureka
    #      - DB_HOST=database
    #      - DB_USERNAME=root
    #      - DB_PASSWORD=dbpassword
    #    depends_on:
    #      database:
    #        condition: service_healthy

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
#      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
#      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    networks:
      - backend
    depends_on:
      - zookeeper
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#    healthcheck:
#      test: ["CMD", "bash", "-c", "echo 'list topics' | kafka-topics --bootstrap-server kafka:9092 --list"]
#      interval: 30s
#      timeout: 10s
#      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - backend
    healthcheck:
      test: ["CMD", "echo", "ruok"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  backend:
    name: backend
    driver: bridge
